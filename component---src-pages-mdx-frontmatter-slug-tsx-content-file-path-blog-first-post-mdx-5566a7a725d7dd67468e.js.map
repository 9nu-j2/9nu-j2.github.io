{"version":3,"file":"component---src-pages-mdx-frontmatter-slug-tsx-content-file-path-blog-first-post-mdx-5566a7a725d7dd67468e.js","mappings":"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","sources":["webpack://blog/./blog/first-post.mdx","webpack://blog/./src/Pages/{mdx.frontmatter__slug}.tsx","webpack://blog/./src/Components/Organisms/Footer.tsx","webpack://blog/./src/Components/Atoms/Blog.title.tsx","webpack://blog/./src/Components/Atoms/Menu.tsx","webpack://blog/./src/Components/Molecules/Categories.tsx","webpack://blog/./src/Components/Organisms/Navbar.tsx","webpack://blog/./src/Components/Templates/Post.Body.tsx","webpack://blog/./src/Components/Organisms/About.Post.tsx","webpack://blog/./src/Components/Templates/Post.Header.tsx","webpack://blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"This is my first blog post! Isn't it \", React.createElement(_components.em, null, \"great\"), \"?\"), \"\\n\", React.createElement(_components.p, null, \"Some of my \", React.createElement(_components.strong, null, \"favorite\"), \" things are:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Petting dogs\"), \"\\n\", React.createElement(_components.li, null, \"Singing\"), \"\\n\", React.createElement(_components.li, null, \"Eating potato-based foods\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/jun9/Desktop/JUN9.29/Project/9nu-j2.github.io/blog/first-post.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport PostHeader from '../Components/Templates/Post.Header';\nimport PostBody from '../Components/Templates/Post.Body';\nimport {DataProps} from 'Types/Types';\nimport Footer from '../Components/Organisms/Footer';\nconst BlogPost = ({data, children}) => {\n  return React.createElement(\"div\", null, React.createElement(PostHeader, {\n    title: data.mdx.frontmatter.title,\n    datePublished: data.mdx.frontmatter.datePublished\n  }), React.createElement(PostBody, {\n    children: children\n  }), React.createElement(Footer));\n};\nexport const Head = ({data}) => React.createElement(\"title\", null, data.mdx.frontmatter.title);\nexport const query = graphql`\nquery ($id: String) {\n    mdx(id: { eq: $id }) {\n        frontmatter {\n            title\n            datePublished(formatString: \"YYYY-MM-D\")\n            author\n            slug\n        }\n        id\n    }\n}\n`;\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React, { FunctionComponent } from 'react'\nimport styled from 'styled-components';\n\nconst Footer: FunctionComponent = function () {\n    return (\n        <FooterStyle>\n            <div>Copyright Â© 2023, JUN9 All rights reserved.</div>\n            <div>Built with <a href=\"https://www.gatsbyjs.com/\">Gatsby</a></div>\n        </FooterStyle>\n    )\n}\n\nconst FooterStyle = styled.footer`\n    width: 100%;\n    height: 240px;\n    display: flex;\n    gap: 30px;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background: #f2f2f2;\n`;\n\nexport default Footer;","import React, { FunctionComponent } from 'react'\nimport styled from 'styled-components';\n\ntype TitleData = {\n    title: string\n}\n\nconst Title: FunctionComponent<TitleData> = function ({ title }) {\n    return <Blogtitle>\n        <a href=\"/\">{title}</a>\n    </Blogtitle>\n}\n\nconst Blogtitle = styled.div`\n    width: 120px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nexport default Title","import React, { FunctionComponent, ReactNode } from 'react'\nimport styled from 'styled-components';\n\ntype TitleProps = {\n    children: ReactNode;\n    context: string\n    link: string\n}\n\nconst Menu: FunctionComponent<TitleProps> = ({ context, link }) => {\n    return (\n        <MenuItem>\n            <FontStyle href={`${link}`}>{context}</FontStyle>\n        </MenuItem >\n    )\n}\n\nconst MenuItem = styled.div`\n    width: 70px;\n    height: 40px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nconst FontStyle = styled.a`\n    font-weight: 700;\n    color: white;\n    opacity: 0.8;\n    text-decoration: none;\n    text-shadow: 0 0 0.2rem black;\n\n    &:hover {\n        opacity: 1;\n    }\n`\n\nexport default Menu","import React, { FunctionComponent } from 'react'\nimport styled from 'styled-components';\nimport Menu from '../Atoms/Menu';\n\nconst Categories: FunctionComponent = function () {\n    return (\n        <CategoriesPart>\n            <Menu context={\"Home\"} link={\"/\"}>\n            </Menu>\n            <Menu context={\"Category\"} link={\"/tags\"}>\n            </Menu>\n        </CategoriesPart>\n    );\n}\n\nconst CategoriesPart = styled.div`\n    width: 172px;\n    height: 40px;\n    display: flex;\n    justify-content: space-between;\n`\n\nexport default Categories","import React, { FunctionComponent, useState, useEffect } from 'react'\nimport styled from 'styled-components';\nimport Title from '../Atoms/Blog.title';\nimport Categories from '../Molecules/Categories';\n\ntype TitleData = {\n    title: string\n}\n\nconst Nav: FunctionComponent<TitleData> = function ({ title }) {\n\n    const currentUrl = () => {\n        if (typeof window !== `undefined`) {\n            window.location.pathname;\n        }\n    }\n\n    const [scrollPosition, setScrollPosition] = useState(0);\n    const [headerColor, setHeaderColor] = useState(\"#ffffff\");\n    const [bottomBorder, setBottomBorder] = useState(\"transparent\");\n\n    const updateScroll = () => {\n        setScrollPosition(window.scrollY || document.documentElement.scrollTop);\n    };\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", updateScroll);\n        return () => {\n            window.removeEventListener(\"scroll\", updateScroll);\n        };\n    }, []);\n\n    useEffect(() => {\n        if (currentUrl === \"/\" && scrollPosition < 100) {\n            setHeaderColor(\"transparent\");\n            setBottomBorder(\"none\")\n        } else {\n            setHeaderColor(\"#ffffff\");\n            setBottomBorder(\"#d8d7d7\")\n        }\n    }, [scrollPosition, currentUrl]);\n    return (\n        <NavStyle headercolor={headerColor} bottom={bottomBorder}>\n            <RealNav>\n                <Title title={title}></Title>\n                <Categories></Categories>\n            </RealNav>\n        </NavStyle>\n    )\n}\n\nconst NavStyle = styled.nav<{ headercolor: string, bottom: string }>`\n    position: fixed;\n    top:0;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    width: 100vw;\n    height: 60px;\n    z-index:3;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: solid ${(props) => props.bottom};\n    border-width: 0 0 1px 0;\n    background-color: ${(props) => props.headercolor};\n    transition: background-color 0.2s ease-out;\n`;\n\nconst RealNav = styled.div`\n    width: 100%;\n    height: 40px;\n    max-width: 980px;\n    display: flex;\n    justify-content: space-between;\n`\n\nexport default Nav;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { MDXProvider } from \"@mdx-js/react\"\n\ninterface PostBodyProps {\n    children: JSX.Element;\n}\n\nconst PostBody = ({ children }: PostBodyProps) => {\n    return (\n        <MDXProvider>\n            <Container>\n                <MdxPart>\n                    {children}\n                </MdxPart>\n            </Container>\n        </MDXProvider>\n    )\n};\n\nconst Container = styled.div`\n    background: white;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nconst MdxPart = styled.div`\n    width: 652px;\n    padding-top: 170px;\n    padding-bottom: 100px;\n`\n\nexport default PostBody;","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface PostProps {\n    title: string;\n    datePublished: string;\n}\n\nconst AboutPost = ({ title, datePublished }: PostProps) => {\n    return (\n        <Container>\n            <p>{datePublished} ë°íë¨</p>\n            <PostH>{title}</PostH>\n            <p>ë´ì© ìì½ìëë¤</p>\n        </Container>\n    )\n};\n\nconst Container = styled.div`\n    background: transparent;\n    width: 600px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-top: 500px;\n`;\n\nconst PostH = styled.h1`\n    margin:0;\n    font-weight: 800;\n    font-size: 2.6rem;\n`\n\n\nexport default AboutPost;","import React, { FunctionComponent } from 'react'\nimport { styled, keyframes } from 'styled-components';\nimport Nav from '../Organisms/Navbar'\nimport AboutPost from '../Organisms/About.Post';\n\ntype HProp = {\n    title: string;\n    datePublished: string;\n}\n\nconst PostHeader: FunctionComponent<HProp> = function ({ title, datePublished }) {\n    return (\n        <Header>\n            <ImageStyle>\n            </ImageStyle>\n            <Nav title={\"ìì§ë¯¸ì \"}></Nav>\n            <AboutPost title={title} datePublished={datePublished} />\n        </Header>\n    )\n};\n\nconst Header = styled.div`\n    width: 100%;\n    height: 100vh;\n    display: flex;\n    gap: 12px;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n`\n\nconst ImageStyle = styled.div`\n    position: absolute;\n    transform: translate(-50%, -50%, 0%);\n    width:100%;\n    height: 100vh;\n    z-index:-1;\n`\n\nexport default PostHeader","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means itâs no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means itâs no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","em","strong","ul","li","_provideComponents","components","React","wrapper","MDXLayout","BlogPost","_ref","data","children","PostHeader","title","mdx","frontmatter","datePublished","PostBody","Footer","Head","_ref2","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","FooterStyle","styled","footer","href","Blogtitle","div","MenuItem","FontStyle","a","context","link","CategoriesPart","Menu","NavStyle","nav","displayName","componentId","bottom","headercolor","RealNav","currentUrl","window","location","pathname","scrollPosition","setScrollPosition","useState","headerColor","setHeaderColor","bottomBorder","setBottomBorder","updateScroll","scrollY","document","documentElement","scrollTop","useEffect","addEventListener","removeEventListener","Title","Categories","Container","MdxPart","MDXProvider","PostH","h1","Header","ImageStyle","Nav","AboutPost","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}