{"version":3,"file":"component---src-pages-posts-tsx-2b9e4219280fa43517f1.js","mappings":"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","sources":["webpack://blog/./src/Components/Organisms/Drawer.tsx","webpack://blog/./src/Components/Organisms/Tags.Navbar.tsx","webpack://blog/./src/states/atom.tsx","webpack://blog/./src/Components/Organisms/Tags.List.tsx","webpack://blog/./src/Components/Templates/Tags.Header.tsx","webpack://blog/./src/Hooks/useInfiniteScroll.tsx","webpack://blog/./src/Components/Organisms/Infinite.Scroll.tsx","webpack://blog/./src/Pages/posts.tsx"],"sourcesContent":["import React from 'react'\nimport { styled, keyframes } from 'styled-components';\nimport { Link } from \"gatsby\"\nimport { GatsbyImage, getImage, StaticImage } from 'gatsby-plugin-image'\n\nconst Drawer = ({ title, date, link, thumnail, thumnailAlt }) => {\n    const image = getImage(thumnail);\n\n    const style = {\n        height: \"300px\",\n        width: \"300px\",\n        backgroundColor: \"#f2f2f2\",\n        borderRadius: \"15px\",\n    }\n    return (\n        <Link to={`/${link}`} style={{ textDecoration: \"none\" }}>\n            <CardContainer>\n                <GatsbyImage image={image} alt={thumnailAlt} style={style} imgStyle={{ overflow: \"hidden\", objectFit: \"cover\" }} />\n                <NameCard>\n                    <TitleStyle>{title}</TitleStyle>\n                    <TimePart>\n                        <DateStyle>{date}</DateStyle>\n                        <StaticImage src=\"../../Statics/Icons/time.png\" alt=\"onTime\" style={{ width: \"19px\", height: \"16px\" }} imgStyle={{ objectFit: \"fill\" }} />\n                    </TimePart>\n                </NameCard>\n            </CardContainer>\n        </Link>\n    )\n}\n\nconst CardContainer = styled.section`\n    height: 300px;\n    width: 770px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n`\n\nconst NameCard = styled.div`\n    height:100%;\n    width: 400px;\n    background: white;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: flex-start;\n    color: black;\n    padding-top: 40px;\n    padding-bottom: 50px;\n    border-radius: 15px;\n\n    ${CardContainer}:hover & {\n        \n    }\n`\n\nconst TimePart = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n    width: 100%;\n    gap: 8px;\n\n    ${CardContainer}:hover & {\n        \n    }\n`\n\nconst TitleStyle = styled.h2`\n    ${CardContainer}:hover & {\n        \n    }\n`\n\nconst DateStyle = styled.div`\n    ${CardContainer}:hover & {\n        \n    }\n`\n\nexport default Drawer","import React, { FunctionComponent, useState, useEffect } from 'react'\nimport styled from 'styled-components';\nimport Title from '../Atoms/Blog.title';\nimport Categories from '../Molecules/Categories';\n\nconst Nav: FunctionComponent = function () {\n    const [scrollPosition, setScrollPosition] = useState(0);\n    const [headerColor, setHeaderColor] = useState(\"#ffffff\");\n    const [logoType, setLogoType] = useState(false);\n    const [bottomBorder, setBottomBorder] = useState(\"transparent\");\n    const [vh, setVh] = useState(0);\n\n    const updateScroll = () => {\n        setScrollPosition(window.scrollY || document.documentElement.scrollTop);\n    };\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", updateScroll);\n        return () => {\n            window.removeEventListener(\"scroll\", updateScroll);\n        };\n    }, []);\n\n    useEffect(() => {\n        setVh(window.innerHeight * 0.01);\n    }, [scrollPosition]);\n\n    useEffect(() => {\n        if (scrollPosition <= 1 * vh) {\n            setHeaderColor(\"transparent\");\n            setBottomBorder(\"none\");\n        } else {\n            setHeaderColor(\"#ffffff\");\n            setBottomBorder(\"#DFDFDF\");\n        }\n    }, [scrollPosition]);\n    return (\n        <NavStyle headercolor={headerColor} bottom={bottomBorder}>\n            <RealNav>\n                <Title title={logoType}></Title>\n                <Categories></Categories>\n            </RealNav>\n        </NavStyle>\n    )\n}\n\nconst NavStyle = styled.nav<{ headercolor: string, bottom: string }>`\n    position: fixed;\n    top:0;\n    left: 50%;\n    transform: translate(-50%, 0%);\n    width: 100vw;\n    height: 60px;\n    z-index:3;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: solid ${(props) => props.bottom};\n    border-width: 0 0 1px 0;\n    background-color: ${(props) => props.headercolor};\n    transition: background-color 0.1s ease-out;\n`;\n\nconst RealNav = styled.div`\n    width: 100%;\n    height: 40px;\n    max-width: 980px;\n    display: flex;\n    justify-content: space-between;\n`\n\nexport default Nav;","import { atom } from \"recoil\";\n\nexport const selectedCategory = atom({\n    key: \"selectedCategory\",\n    default: \"All\"\n});","import React, { useState, useEffect } from 'react'\nimport { Link, PageProps } from \"gatsby\";\nimport { styled, keyframes } from 'styled-components';\nimport { useRecoilState } from \"recoil\";\nimport { selectedCategory } from \"../../states/atom\";\n\ntype TagsPageData = {\n    allMdx: {\n        group: {\n            totalCount: number;\n            fieldValue: string;\n        }[];\n    };\n};\n\nconst TagsList = ({ data }: PageProps<TagsPageData>) => {\n    const tags = data.allMdx.group.sort((a, b) => b.totalCount - a.totalCount);\n    const [category, setCategory] = useRecoilState(selectedCategory);\n\n    const select = (value: string) => {\n        setCategory(value);\n    }\n\n    return (\n        <Layout>\n            <h1>TAGS</h1>\n            <TagListStyle>\n                {tags.map((tag) => (\n                    <div onClick={() => select(tag.fieldValue)} style={{ textDecoration: \"none\", color: \"white\", cursor: \"pointer\" }}>\n                        {category === tag.fieldValue ?\n                            (<TagListReverse key={tag.fieldValue}>\n                                <Pstyle>{`${tag.fieldValue}`}</Pstyle>\n                            </TagListReverse>) :\n                            (<TagList key={tag.fieldValue}>\n                                <Pstyle>{`${tag.fieldValue}`}</Pstyle>\n                            </TagList>)\n                        }\n                    </div>\n                ))}\n            </TagListStyle>\n        </Layout>\n    );\n};\n\nconst Layout = styled.div`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    align-items: center;\n`\n\nconst TagListStyle = styled.ul`\n    display: grid;\n    grid-template-columns: repeat(auto-fill,minmax(100px, auto));\n    grid-auto-rows: auto;\n    width: 800px;\n    gap: 10px 10px;\n    grid-auto-flow: dense;\n    text-decoration: none;\n    margin: 0;\n    padding-bottom: 60px;\n    padding-top: 30px;\n`\n\nconst TagList = styled.li`\n    display: flex;\n    width: 100%;\n    height: 100%;\n    justify-content: center;\n    align-items: center;\n    background: #2c4866;\n    border-radius: 5px;\n\n    &:hover {\n        border-color: #2c4866;\n        background: white;\n        border: 1px;\n        color: #2c4866;\n    }\n`\n\nconst TagListReverse = styled.li`\n    display: flex;\n    width: 100%;\n    height: 100%;\n    justify-content: center;\n    align-items: center;\n    background: white;\n    color: #2c4866;\n    border: 1.5px;\n    border-style:solid;\n    border-color: #2c4866;\n    border-radius: 5px;\n`\n\nconst Pstyle = styled.p`\n    padding: 0px;\n    margin: 0px;\n`\n\nexport default TagsList;","import React, { FunctionComponent } from 'react'\nimport { styled, keyframes } from 'styled-components';\nimport Nav from '../Organisms/Tags.Navbar'\nimport TagsList from '../Organisms/Tags.List'\n\nconst TagsHeader: FunctionComponent = ({ data }) => {\n    return (\n        <Header>\n            <Nav></Nav>\n            <TagsList data={data}></TagsList>\n        </Header>\n    )\n}\n\nconst Header = styled.div`\n    width: 100%;\n    height: 50vh;\n    display: flex;\n    gap: 12px;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n`\n\nexport default TagsHeader","import { MutableRefObject, useState, useRef, useMemo, useEffect } from 'react'\n\nconst NUMBER_OF_ITEMS_PER_PAGE = 2\n\nconst useInfiniteScroll = (\n    selectedCategory,\n    posts,\n) => {\n    const containerRef: MutableRefObject<HTMLDivElement | null> = useRef<HTMLDivElement>(\n        null,\n    )\n    const [count, setCount] = useState<number>(1)\n\n    const postListByCategory = useMemo(\n        () =>\n            posts.filter(({ frontmatter: { tags } }) =>\n                selectedCategory !== 'All'\n                    ? tags.includes(selectedCategory)\n                    : true,\n            ),\n        [selectedCategory],\n    )\n\n\n    const observer = typeof window !== `undefined` ? new IntersectionObserver(\n        (entries, observer) => {\n            if (!entries[0].isIntersecting) return;\n            setCount(value => value + 1);\n            observer.disconnect();\n        },\n    ) : null\n\n\n    useEffect(() => setCount(1), [selectedCategory])\n\n    useEffect(() => {\n        if (\n            NUMBER_OF_ITEMS_PER_PAGE * count >= postListByCategory.length ||\n            containerRef.current === null ||\n            containerRef.current.children.length === 0\n        ) return;\n\n        if (observer !== null) {\n            observer.observe(\n                containerRef.current.children[containerRef.current.children.length - 1],\n            )\n        }\n\n    }, [count, selectedCategory])\n\n    return { containerRef, postList: postListByCategory.slice(0, count * NUMBER_OF_ITEMS_PER_PAGE), }\n}\n\nexport default useInfiniteScroll","import React from 'react'\nimport styled from 'styled-components';\nimport { useRecoilState, useResetRecoilState } from \"recoil\";\nimport { selectedCategory } from \"../../states/atom\";\nimport useInfiniteScroll from '../../Hooks/useInfiniteScroll';\nimport Drawer from '../Organisms/Drawer';\n\nconst InfiniteScroll = ({ data }) => {\n    const posts = data.allMdx.nodes\n    const [category, setCategory] = useRecoilState(selectedCategory);\n    const { containerRef, postList } = useInfiniteScroll(category, posts)\n    return (\n        <LatestListContainer ref={containerRef}>\n            {\n                postList.map(\n                    (node) => (\n                        <LiContainer key={node.id}>\n                            <Drawer title={node.frontmatter.title} date={node.frontmatter.datePublished} link={node.frontmatter.slug} thumnail={node.frontmatter.hero_image} thumnailAlt={node.frontmatter.hero_image_alt}></Drawer>\n                        </LiContainer>\n                    )\n                )\n            }\n        </LatestListContainer>)\n}\n\nconst LatestListContainer = styled.ul`\n    width: 100vw;\n    list-style-type: none;\n    margin: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding-bottom: 100px;\n`\n\nconst LiContainer = styled.li`\n    padding:60px 0 0 0;\n    margin:0;\n`\n\nexport default InfiniteScroll","import React from 'react'\nimport type { HeadProps } from \"gatsby\"\nimport { Link, PageProps, graphql } from \"gatsby\"\nimport { RecoilRoot } from 'recoil';\nimport TagsHeader from '../Components/Templates/Tags.Header'\nimport Footer from '../Components/Organisms/Footer'\nimport { DataProps } from 'Types/Types';\nimport InfiniteScroll from '../Components/Organisms/Infinite.Scroll'\n\nconst MainPage = ({ data }: PageProps) => {\n    return (\n        <main>\n            <RecoilRoot>\n                <TagsHeader data={data}></TagsHeader>\n                <InfiniteScroll data={data}></InfiniteScroll>\n                <Footer></Footer>\n            </RecoilRoot>\n        </main>\n    )\n}\n\nexport default MainPage\n\nexport function Head(props: HeadProps<DataProps>) {\n    return (\n        <title>Moderator {props.data.site.siteMetadata.author}의 문제해결기록용 블로그</title>\n    )\n}\n\nexport const query = graphql`\nquery{\n    site {\n        siteMetadata {\n            title\n            description\n            author\n        }\n    }\n    allMdx {\n        group(field: { frontmatter: { tags: SELECT } }) {\n            fieldValue\n            totalCount\n        }\n        nodes {\n            frontmatter {\n                title\n                datePublished(formatString: \"YYYY.MM.D\")\n                author\n                slug\n                tags\n                hero_image_alt\n                hero_image_credit_link\n                hero_image_credit_text\n                hero_image {\n                    childImageSharp{\n                        gatsbyImageData\n                    }\n                }\n            }\n            id\n        }\n    }\n}\n`"],"names":["CardContainer","styled","section","NameCard","div","TimePart","TitleStyle","h2","DateStyle","_ref","title","date","link","thumnail","thumnailAlt","image","getImage","React","Link","to","style","textDecoration","GatsbyImage","alt","height","width","backgroundColor","borderRadius","imgStyle","overflow","objectFit","StaticImage","src","NavStyle","nav","props","bottom","headercolor","RealNav","scrollPosition","setScrollPosition","useState","headerColor","setHeaderColor","logoType","setLogoType","bottomBorder","setBottomBorder","vh","setVh","updateScroll","window","scrollY","document","documentElement","scrollTop","useEffect","addEventListener","removeEventListener","innerHeight","Title","Categories","selectedCategory","atom","key","default","Layout","TagListStyle","ul","TagList","li","TagListReverse","Pstyle","p","data","tags","allMdx","group","sort","a","b","totalCount","category","setCategory","useRecoilState","map","tag","onClick","select","value","fieldValue","color","cursor","Header","Nav","TagsList","posts","containerRef","useRef","count","setCount","postListByCategory","useMemo","filter","frontmatter","includes","observer","IntersectionObserver","entries","isIntersecting","disconnect","length","current","children","observe","postList","slice","LatestListContainer","LiContainer","nodes","useInfiniteScroll","ref","node","id","Drawer","datePublished","slug","hero_image","hero_image_alt","RecoilRoot","TagsHeader","InfiniteScroll","Footer","Head","site","siteMetadata","author"],"sourceRoot":""}